@model GetAllCategoryVacancy
    <!-- Preloader Start -->
 
    <main>

        <!-- Hero Area Start-->
        <div class="slider-area ">
            <div class="single-slider section-overly slider-height2 d-flex align-items-center" data-background="~/assets/img/hero/about.jpg">
                <div class="container">
                    <div class="row">
                        <div class="col-xl-12">
                            <div class="hero-cap text-center">
                                <h2>Get your job</h2>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Hero Area End -->
        <!-- Job List Area Start -->
        <div class="job-listing-area pt-120 pb-120">
            <div class="container">
                <div class="row">
                    <!-- Left content -->
                    <div class="col-xl-3 col-lg-3 col-md-4">
                        <div class="row">
                            <div class="col-12">
                                <div class="small-section-tittle2 mb-45">
                                    <div class="ion">
                                        <svg xmlns="http://www.w3.org/2000/svg"
                                             xmlns:xlink="http://www.w3.org/1999/xlink"
                                             width="20px" height="12px">
                                            <path fill-rule="evenodd" fill="rgb(27, 207, 107)"
                                                  d="M7.778,12.000 L12.222,12.000 L12.222,10.000 L7.778,10.000 L7.778,12.000 ZM-0.000,-0.000 L-0.000,2.000 L20.000,2.000 L20.000,-0.000 L-0.000,-0.000 ZM3.333,7.000 L16.667,7.000 L16.667,5.000 L3.333,5.000 L3.333,7.000 Z" />
                                        </svg>
                                    </div>
                                    <h4>Filter Jobs</h4>
                                </div>
                            </div>
                        </div>
                        <!-- Job Category Listing start -->
                        <div class="job-category-listing mb-50">
                            <!-- single one -->
                            <div class="single-listing">
                                <div class="small-section-tittle2">
                                    <h4>Job Category</h4>
                                </div>
                                <!-- Select job items start -->
                            <div class="select-job-items2 nice-select" style="border:none;">
                                <select id="categorySelect" class="current"  name="select">
                                    <option value="" class="option selected">All Category</option>
                                        @if (Model.Categories !=null)
                                    {
                                       foreach (var item in Model.Categories)
                                        {
                                            <option class="option " value="@item.Id">@item.Name</option>
                                        }
                                    }
                                        
                                    </select>
                                </div>
                                <!--  Select job items End-->
                                <!-- select-Categories start -->
                                <!-- select-Categories End -->
                            </div>
                            <!-- single two -->
                            <div class="single-listing">
                                <div class="small-section-tittle2">
                                    <h4></h4>
                                </div>
                                <!-- select-Categories End -->
                            </div>
                            <div class="single-listing">
                                <div class="small-section-tittle2">
                                    <h4 style="visibility:hidden;">.</h4>
                                </div>
                                <!-- select-Categories End -->
                            </div>
                            <!-- single three -->
                        </div>
                        <!-- Job Category Listing End -->
                    </div>
                    <!-- Right content -->
                    <div class="col-xl-9 col-lg-9 col-md-8">
                        <!-- Featured_job_start -->
                        <section class="featured-job-area">
                            <div class="container">
                                <!-- Count of Job list Start -->
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class="count-job mb-35">
                                            <span>@Model.Vacancies.Count() Jobs found</span>
                                            <!-- Select job items start -->
                                            <div class="select-job-items" style="visibility:hidden;">
                                                <span>Sort by</span>
                                            <select id="statusSelect" name="select">
                                                    <option value="">None</option>
                                                    <option value="old">Old -> New</option>
                                                </select>
                                            </div>
                                            <!--  Select job items End-->
                                        </div>
                                    </div>
                                </div>
                                <!-- Count of Job list End -->
                                <!-- single-job-content -->
                                @if (Model.Vacancies!=null)
                            {
                                @foreach (var item in Model.Vacancies)
                                {

                                   if (!item.IsActive)
                                    {
                                        

                                        <div class="single-job-items mb-30">
                                            <div class="job-items">

                                                <div class="job-tittle job-tittle2">
                                                    <a>
                                                        <h4>@item.Name</h4>
                                                    </a>
                                                    <ul>
                                                        <li>@item.ValidFrom.ToLocalTime().ToString("dd/MM/yyyy")</li>
                                                        <li>@item.ValidTo.ToLocalTime().ToString("dd/MM/yyyy")</li>
                                                    </ul>
                                                </div>
                                            </div>
                                            <div class="items-link items-link2 f-right">
                                                <a asp-controller="Home" asp-action="Detail" asp-route-Id="@item.Id">Detail</a>
                                                <span class="time-elapsed" data-created="@item.Created.ToLocalTime().ToString("yyyy-MM-ddTHH:mm:ss")"></span>
                                            </div>
                                        </div>
                                    }
                                }
                               
                            }
                            else
                            {
                                <div class="single-job-items mb-30">
                                    <div class="job-items">

                                        <div class="job-tittle job-tittle2">
                                            <a >
                                                <h4>Job posting not found</h4>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }

                            </div>
                        </section>
                        <!-- Featured_job_end -->
                    </div>
                </div>
            </div>
        </div>
        <!-- Job List Area End -->

    </main>
<script src="~/assets/js/category.js"></script>
    <script>



    document.addEventListener("DOMContentLoaded", function () {
        // `nice-select` öğesini seç
        const niceSelect = document.querySelector(".nice-select");
        const hiddenSelect = document.getElementById("statusSelect");

        // Eğer nice-select bulunamazsa hata ver
        if (!niceSelect) {
            console.error("nice-select bulunamadı!");
            return;
        }
        
        // Tıklanan `li` öğesini dinle
        const options = niceSelect.querySelectorAll("li.option");
        options.forEach(option => {
            option.addEventListener("click", function () {
                debugger
                // Seçilen değeri al
                const selectedValue = this.getAttribute("data-value");
                console.log("Selected Value:", selectedValue);

                // `statusSelect`'in değerini güncelle
                hiddenSelect.value = selectedValue;

                // İlgili URL'ye yönlendirme
                const categorySelect = selectedValue;
                let statusEncoded = encodeURIComponent(categorySelect);
                    const url = `/Home/Index?categoryId=${categorySelect}`;
                console.log("Redirecting to:", url);

                // Yönlendirme
                window.location.href = url;
            });
        });
    });
 


    // document.addEventListener("DOMContentLoaded", function () {
    //     const statusSelect = document.getElementById("statusSelect");
    //     const categorySelect = document.getElementById("categorySelect");

    //     if (statusSelect) {
    //         console.log("statusSelect bulundu");
    //         statusSelect.addEventListener("change", function () {
    //             console.log("statusSelect için değişiklik olayı tetiklendi");
    //         });
    //     }

    //     if (categorySelect) {
    //         console.log("categorySelect bulundu");
    //         categorySelect.addEventListener("change", function () {
    //             console.log("categorySelect için değişiklik olayı tetiklendi");
    //         });
    //     }
    // });


    


    
    //         document.querySelectorAll("#statusSelect, #categorySelect").forEach(function (selectElement) {
    //     selectElement.addEventListener("change", function () {
    //         debugger;

    //         // Seçimlerin değerlerini al
    //         let status = document.getElementById("statusSelect").value;
    //         let category = document.getElementById("categorySelect").value;

    //         // Değerleri URL'ye ekle
    //         let statusEncoded = encodeURIComponent(status);
    //         let categoryEncoded = encodeURIComponent(category);
    //         let urlfinal = `/Home/Index?categoryId=${categoryEncoded}&sortold=${statusEncoded}`;

    //         // Yeni URL'ye yönlendir
    //         window.location.href = urlfinal;
    //     });
    // });





        document.addEventListener("DOMContentLoaded", function () {
        // Tüm "time-elapsed" öğelerini seç
        const timeElements = document.querySelectorAll(".time-elapsed");

        timeElements.forEach(function (element) {
            // "data-created" attribute'undan tarihi al
            const createdDate = new Date(element.getAttribute("data-created"));
            const now = new Date();

            // Zaman farkını hesapla
            const timeDiff = Math.abs(now - createdDate); // Milisaniye farkı
            const minutes = Math.floor(timeDiff / (1000 * 60));
            const hours = Math.floor(minutes / 60);
            const days = Math.floor(hours / 24);

            // Kullanıcı dostu metni belirle
            let timeElapsedText = "";
            if (minutes < 60) {
                timeElapsedText = `${minutes} minutes ago`;
            } else if (hours < 24) {
                timeElapsedText = `${hours} hours ago`;
            } else {
                timeElapsedText = `${days} days ago`;
            }

            // Hesaplanan değeri HTML'e yaz
            element.textContent = timeElapsedText;
        });
    });
    </script>
