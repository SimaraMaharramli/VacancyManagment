@model SImaraMaharramli_Pasha.Service.DTOS.Vacancy.GetDetailVacancy
<style>
    /* Genel modal görünümü */
    .modal {
        display: none;
        position: fixed;
        z-index: 1050;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5); /* Karartma */
        justify-content: center;
        align-items: center;
    }

    /* Modal içeriği (form ve başlık) */
    .modal-dialog {
        background-color: #fff;
        border-radius: 8px;
        width: 90%;
        max-width: 500px; /* Modalın genişliği sınırlı */
        padding: 20px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Gölgeler */
        display: flex;
        flex-direction: column;
    }

    /* Modal başlık */
    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .modal-title {
        font-size: 20px;
        color: #333;
        font-weight: 600;
    }

    /* Kapatma butonu */
    .close {
        background: none;
        border: none;
        font-size: 24px;
        color: #aaa;
        cursor: pointer;
        transition: color 0.3s ease;
    }

        .close:hover {
            color: #333;
        }

    /* Modal gövdesi */
    .modal-body {
        padding: 10px ;
    }

    /* Form inputları */
    .form-group {
        margin-bottom: 15px;
    }

    input[type="text"],
    input[type="email"],
    input[type="tel"] {
        width: 100%;
        padding: 10px;
        margin-top: 5px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 14px;
    }

    button[type="submit"] {
        background-color: #e91e63; /* Buton rengi */
        color: white;
        padding: 12px 20px;
        border: none;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        margin-top: 15px;
        width: 100%;
    }

        button[type="submit"]:hover {
            background-color: #c2185b; /* Buton hover rengi */
        }
     
    /* Modal dışı tıklama alanını da kapsama */
    .modal {
        display: none;
        position: fixed;
        z-index: 1050;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.4);
        justify-content: center;
        align-items: center;
    }



</style>
<link rel="stylesheet" href="~/assets/css/tickedpopup.css">
<main>

    <!-- Hero Area Start-->
    <div class="slider-area ">
        <div class="single-slider section-overly slider-height2 d-flex align-items-center" >
            <div class="container">
                <div class="row">
                    <div class="col-xl-12">
                       
                        <div class="hero-cap text-center">
                            <h2>Find Your Job!</h2>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Hero Area End -->
    <!-- job post company Start -->
    <div class="job-post-company pt-120 pb-120">
        <div class="container">
            <div class="row justify-content-between">
                <!-- Left Content -->
                <div class="col-xl-7 col-lg-8">
                    <!-- job single -->
                    <div class="single-job-items mb-50" style="width:100%;">
                        <div class="job-items" style="width:100%;">
                           
                            <div class="job-tittle" style="width:100%;">
                                <div style="display:flex;justify-content:space-between; ">
                                    <a>
                                        <h4>@Model.Name</h4>
                                    </a>
                                    <div class="apply-btn2">
                                        <button class="apply-btn btn" onclick="openApplyModal(@Model.Id)">Apply</button>
                                    </div>
                                </div>
                                
                                <ul>
                                    <li>@Model.ValidFrom.ToLocalTime().ToString("dd/MM/yyyy")</li>
                                    <li>@Model.ValidTo.ToLocalTime().ToString("dd/MM/yyyy")</li>
                                    <li>@Model.ApplicatioCount apply</li>
                                    
                                    
                                </ul>
                            </div>
                        </div>
                    </div>
                    <!-- job single End -->

                    <div class="job-post-details">
                        <div class="post-details1 mb-50">
                            <!-- Small Section Tittle -->
                            <div class="small-section-tittle">
                                <h4>Job Description</h4>
                            </div>
                             </div>
                        @Html.Raw(Model.Description)
                    </div>

                </div>
                <!-- Right Content -->
               
            </div>
        </div>
    </div>
    <!-- job post company End -->



</main>
<div id="applyModal" class="modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5>Apply for Vacancy</h5>
                <button type="button" class="close" onclick="closeApplyModal()">&times;</button>
            </div>
            <div class="modal-body">
                <form id="applicationForm" action="/VacancyApplication/Apply" method="post">
                    <input type="hidden" id="VacancyId" name="VacancyId" />
                    <input type="hidden"  name="@Model.Name" />
                    <div>
                        <label for="fullName">Full Name:</label>
                        <input type="text" id="fullName" name="FullName" required />
                    </div>
                    <div>
                        <label for="email">Email:</label>
                        <input type="email" id="email" name="Email" placeholder="tes@gmail.com" required />
                    </div>
                    <div>
                        <label for="phone">Phone:</label>
                        <input type="tel" id="phone" name="Phone" placeholder="055 555 55 55" pattern="[0-9]{10}" required />
                    </div>
                    <button type="submit" class="btn btn-primary" style="height:40px;">Apply</button>
                </form>
            </div>
        </div>
    </div>
</div>
<script>
    const openApplyModal = (vacancyId) => {
        const modal = document.querySelector("#applyModal");
        const vacancyInput = modal.querySelector("#VacancyId");
        vacancyInput.value = vacancyId;

        // Modal'ı görünür hale getir
        modal.style.display = "flex";
    };

    const closeApplyModal = () => {
        const modal = document.querySelector("#applyModal");
        modal.style.display = "none";
    };

    document.addEventListener("click", (event) => {
        const modal = document.querySelector("#applyModal");
        if (event.target === modal) {
            closeApplyModal();
        }
    });

    document.querySelector("#applicationForm").addEventListener("submit", async (event) => {
        event.preventDefault();
        const form = event.target;
        const formData = new FormData(form);

        try {
            const response = await fetch(form.action, {
                method: "POST",
                body: formData,
            });

            const result = await response.json();

            if (result.success) {
                closeApplyModal(); // Modal'ı kapat
                showSuccessTicket("Application submitted successfully!"); // Başarı mesajını göster

                // 3 saniye sonra yeni sayfaya yönlendirme
                setTimeout(() => {
                    window.location.href = `/QusetionTest/TestRules?applicationId=${result.applicationId}`;
                }, 3000);
            } else {
                alert(result.message || "Application failed.");
            }
        } catch (error) {
            console.error("Error submitting application:", error);
            alert("An error occurred. Please try again.");
        }
    });

    const showSuccessTicket = (message) => {
        const successTicket = document.createElement("div");
        successTicket.classList.add("success-ticket");
        successTicket.textContent = message;

        document.body.appendChild(successTicket);

        // 3 saniye sonra mesajı kaldır
        setTimeout(() => {
            successTicket.remove();
        }, 3000);
    };
</script>

